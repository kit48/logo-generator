{"version":3,"sources":["serviceWorker.ts","components/Logo/index.tsx","App.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","props","name","number","backgroundColor","style","square","borderRadious","rest","fontStyle","marginTop","marginLeft","userSelect","width","height","paddingLeft","boxSizing","color","fontFamily","letterSpacing","borderRadius","fontSize","lineHeight","Page","React","setName","setNumber","getColorFromString","setColor","setSquare","setBorderRadious","calloutVisible","setCalloutVisible","useSize","document","getElementsByTagName","loading","setLoading","previewVisible","setPreviewVisible","localStorage","getItem","teachingBubbleVisible","setTeachingBubbleVisible","setItem","horizontal","minHeight","display","justifyContent","alignItems","marginBottom","Stack","verticalAlign","Logo","key","id","str","onClick","Callout","target","onDismiss","DelayedRender","ColorPicker","onChange","_","colorObj","console","log","getElementsByClassName","fill","TeachingBubble","headline","calloutProps","directionalHint","TextField","label","value","newValue","toUpperCase","Toggle","checked","Slider","max","DefaultButton","iconProps","iconName","text","disabled","length","logoNode","getElementById","html2canvas","then","canvas","previewLogoNode","appendChild","catch","error","finally","horizontalAlign","margin","Text","variant","block","href","rel","onMouseOver","backgroundImage","onMouseLeave","title","Icon","marginRight","Spinner","size","SpinnerSize","small","Modal","isOpen","isBlocking","large","link","createElement","download","toDataURL","click","initializeIcons","ReactDOM","render","StrictMode","App","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b67c283a.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as React from 'react';\n\nexport interface LogoProps extends React.HTMLProps<HTMLDivElement> {\n  name: string;\n  number: string;\n  backgroundColor: string;\n  square?: boolean;\n  borderRadious?: number;\n}\n\nexport default (props: LogoProps) => {\n  const { name, number, backgroundColor = '#8fd3f6', style, square, borderRadious, ...rest } = props;\n\n  const fontStyle: React.CSSProperties = {\n    marginTop: -6,\n    marginLeft: -6,\n  };\n\n  return (\n    <div\n      style={{\n        userSelect: 'none',\n        width: square ? 330 : 234,\n        height: 330,\n        paddingLeft: square ? 48 : 0,\n        backgroundColor,\n        boxSizing: 'border-box',\n        color: '#fefefe',\n        fontFamily: \"'Inconsolata', monospace\",\n        letterSpacing: '-12px',\n        borderRadius: `${square && borderRadious ? borderRadious : 0}px`,\n        fontSize: '180px',\n        lineHeight: '125px',\n        ...style,\n      }}\n      {...rest}\n    >\n      <div style={fontStyle}>{name || '　'}</div>\n      <div style={fontStyle}>{number}</div>\n    </div>\n  );\n};\n","import * as React from 'react';\nimport {\n  Stack,\n  TextField,\n  ColorPicker,\n  getColorFromString,\n  DefaultButton,\n  Toggle,\n  Callout,\n  DelayedRender,\n  Text,\n  Modal,\n  TeachingBubble,\n  Icon,\n  Spinner,\n  SpinnerSize,\n  Slider,\n} from '@fluentui/react';\nimport { useSize } from 'ahooks';\nimport html2canvas from 'html2canvas';\n\nimport Logo from './components/Logo';\n\nconst DEFAULT_NAME = 'KIT';\nconst DEFAULT_NUMBER = '48';\nconst DEFAULT_COLOR = '#3178c6';\nconst TEACHED_LABEL = 'teached';\nconst LOGO_ID = 'logo';\nconst PREVIEW_LOGO_ID = 'preview-logo';\nconst GITHUB_CORNER_CLASS_NAME = 'github-corner';\n\nfunction Page() {\n  const [name, setName] = React.useState(DEFAULT_NAME);\n  const [number, setNumber] = React.useState(DEFAULT_NUMBER);\n  const [color, setColor] = React.useState(getColorFromString(DEFAULT_COLOR)!);\n  const [square, setSquare] = React.useState(false);\n  const [borderRadious, setBorderRadious] = React.useState(0);\n  const [calloutVisible, setCalloutVisible] = React.useState(false);\n  const { width } = useSize(document.getElementsByTagName('body')[0]);\n  const [loading, setLoading] = React.useState(false);\n  const [previewVisible, setPreviewVisible] = React.useState(false);\n  const [teachingBubbleVisible, setTeachingBubbleVisible] = React.useState(() => {\n    const teached = localStorage.getItem(TEACHED_LABEL);\n    return !teached;\n  });\n\n  React.useEffect(() => {\n    localStorage.setItem(TEACHED_LABEL, '1');\n  }, []);\n\n  function handlePreview() {\n    setLoading(true);\n    setPreviewVisible(true);\n    const logoNode = document.getElementById(LOGO_ID)!;\n\n    html2canvas(logoNode, { backgroundColor: null })\n      .then(function (canvas) {\n        // 直接通过 cavas 下载会有图片显示不完整的 bug\n        const previewLogoNode = document.getElementById(PREVIEW_LOGO_ID);\n        previewLogoNode?.appendChild(canvas);\n        // const link = document.createElement('a');\n        // link.download = `${name}${number}.png`;\n        // link.href = canvas.toDataURL();\n        // link.click();\n      })\n      .catch(function (error) {\n        console.error('oops, something went wrong!', error);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }\n\n  function handleDownload() {\n    const previewLogoNode = document.getElementById(PREVIEW_LOGO_ID);\n    const canvas = previewLogoNode?.getElementsByTagName('canvas')[0];\n    if (canvas) {\n      const link = document.createElement('a');\n      link.download = `${name}${number}.png`;\n      link.href = canvas.toDataURL();\n      link.click();\n    }\n  }\n\n  const horizontal = !!width && width >= 734;\n\n  return (\n    <div\n      style={{ width: '100vw', minHeight: '100vh', display: 'flex', justifyContent: 'center', alignItems: 'center' }}\n    >\n      <div style={{ marginBottom: 80 }}>\n        <Stack horizontal={horizontal} verticalAlign='center'>\n          <div style={{ width: 360, display: 'flex', justifyContent: 'center' }}>\n            <Logo\n              key={`${name}${number}`}\n              id={LOGO_ID}\n              name={name}\n              number={number}\n              backgroundColor={color.str}\n              square={square}\n              borderRadious={borderRadious}\n              onClick={() => {\n                setCalloutVisible(!calloutVisible);\n                setTeachingBubbleVisible(false);\n              }}\n            />\n            {calloutVisible && (\n              <Callout\n                target={`#${LOGO_ID}`}\n                onDismiss={() => {\n                  setCalloutVisible(false);\n                }}\n              >\n                <DelayedRender>\n                  <ColorPicker\n                    color={color}\n                    onChange={(_, colorObj) => {\n                      console.log(colorObj);\n                      setColor(colorObj);\n\n                      const githubCornerNode = document.getElementsByClassName(GITHUB_CORNER_CLASS_NAME)[0];\n                      githubCornerNode.getElementsByTagName('svg')[0].style.fill = colorObj.str;\n                    }}\n                  />\n                </DelayedRender>\n              </Callout>\n            )}\n            {teachingBubbleVisible && (\n              <TeachingBubble\n                target={`#${LOGO_ID}`}\n                onDismiss={() => {\n                  setTeachingBubbleVisible(false);\n                }}\n                headline='支持调色'\n                calloutProps={{\n                  directionalHint: 9,\n                }}\n              >\n                点击图标弹出调色面板\n              </TeachingBubble>\n            )}\n          </div>\n          <Stack style={{ width: 360, marginLeft: 12 }}>\n            <div style={{ height: 248 }}>\n              <TextField\n                label='Name'\n                value={name}\n                onChange={(_, newValue) => {\n                  setName(newValue!.toUpperCase());\n                }}\n              />\n              <TextField\n                label='Number'\n                value={`${number}`}\n                onChange={(_, newValue) => {\n                  setNumber(newValue!);\n                }}\n              />\n              <Toggle\n                label='Square'\n                checked={square}\n                onChange={(_, checked) => {\n                  setSquare(!!checked);\n                }}\n              />\n              {square && (\n                <DelayedRender>\n                  <Slider\n                    label='Round Corner'\n                    value={borderRadious}\n                    onChange={(newValue) => {\n                      setBorderRadious(newValue);\n                    }}\n                    max={48}\n                  />\n                </DelayedRender>\n              )}\n            </div>\n            <div>\n              <DefaultButton\n                iconProps={{ iconName: 'Redo' }}\n                onClick={() => {\n                  setName(DEFAULT_NAME);\n                  setNumber(DEFAULT_NUMBER);\n                  setColor(getColorFromString(DEFAULT_COLOR)!);\n                  setSquare(false);\n                }}\n                text='重置'\n              />\n              <DefaultButton\n                style={{ marginLeft: 12 }}\n                iconProps={{ iconName: 'PictureFill' }}\n                disabled={loading || name.length !== 3 || number.length !== 2}\n                onClick={handlePreview}\n                text='预览'\n              />\n            </div>\n          </Stack>\n        </Stack>\n        <Stack horizontalAlign='center' style={{ margin: '64px 12px 0' }}>\n          <Text variant='large' block>\n            温馨提示\n          </Text>\n          <Text style={{ marginTop: 12, marginBottom: 12 }}>\n            为了更好的使用体验，请使用 PC 访问本网站。此外，如果你想实现更炫酷的效果，可以自己定制&nbsp;\n            <a href='https://www.runoob.com/css3/css3-tutorial.html' target='_blank' rel='noopener noreferrer'>\n              CSS 样式\n            </a>\n            ，比如\n            <a\n              href='https://www.runoob.com/css3/css3-gradients.html'\n              target='_blank'\n              rel='noopener noreferrer'\n              onMouseOver={() => {\n                document.getElementById(LOGO_ID)!.style.backgroundImage =\n                  'linear-gradient(141deg,#9fb8ad 0%,#1fc8db 51%,#2cb5e8 75%)';\n              }}\n              onMouseLeave={() => {\n                document.getElementById(LOGO_ID)!.style.backgroundImage = 'unset';\n              }}\n            >\n              背景渐变\n            </a>\n            。\n          </Text>\n          <Text style={{ display: 'flex', alignItems: 'center' }} title='总访问量'>\n            <Icon iconName='Trophy' style={{ marginRight: 4 }} />\n            <div id='busuanzi_container_page_pv'>\n              <div id='busuanzi_value_page_pv'>\n                <Spinner size={SpinnerSize.small} />\n              </div>\n            </div>\n          </Text>\n        </Stack>\n        <Modal\n          isOpen={previewVisible}\n          onDismiss={() => {\n            setPreviewVisible(false);\n          }}\n          isBlocking={false}\n        >\n          <Stack horizontalAlign='center'>\n            <div\n              id={PREVIEW_LOGO_ID}\n              style={{\n                width: 360,\n                height: 330,\n                display: 'flex',\n                justifyContent: 'center',\n                marginTop: 36,\n              }}\n            >\n              {loading && <Spinner size={SpinnerSize.large} />}\n            </div>\n            <div style={{ margin: '24px 0' }}>\n              <DefaultButton\n                iconProps={{ iconName: 'Download' }}\n                disabled={loading}\n                onClick={handleDownload}\n                text='下载'\n              />\n            </div>\n          </Stack>\n        </Modal>\n      </div>\n    </div>\n  );\n}\n\nexport default Page;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { initializeIcons } from '@uifabric/icons';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport './index.css';\n\ninitializeIcons();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}